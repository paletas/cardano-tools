syntax = "proto3";

option csharp_namespace = "Silvestre.Cardano.Integration.DbSync.Services";

import "google/protobuf/timestamp.proto";
package cardanodbsyncapi;

//Services
///Epochs
service Epochs {
  rpc GetCurrentEpoch (CurrentEpochRequest) returns (CurrentEpochReply);

  rpc GetEpoch (GetEpochRequest) returns (GetEpochReply);

  rpc GetEpochStatistics (GetEpochStatisticsRequest) returns (GetEpochStatisticsReply);
}

message CurrentEpochRequest {

}

message CurrentEpochReply {
  Epoch Epoch = 1;
}

message GetEpochRequest {
  uint32 EpochNumber = 1;
}

message GetEpochReply {
  Epoch Epoch = 1;
}

message GetEpochStatisticsRequest {
  uint32 EpochNumber = 1;
}

message GetEpochStatisticsReply {
  EpochStatistics Statistics = 1;
}

///Blocks
service Blocks {
  rpc GetLatestBlock (LatestBlockRequest) returns (LatestBlockReply);

  rpc BlockUpdates (BlockUpdatesRequest) returns (stream Block);

  rpc GetBlocks (GetBlocksRequest) returns (GetBlocksReply);
}

message LatestBlockRequest {
	uint32 EpochNumber = 1;
}

message LatestBlockReply {
  Block Block = 1;
}

message BlockUpdatesRequest {
	uint32 DelayUpdatesMillisecond = 1;
}

message GetBlocksRequest {
  uint32 EpochNumber = 1;
}

message GetBlocksReply {
  repeated BlockDetail Blocks = 1;
}

/// Stake Pools
service StakePools {
	rpc ListStakePools (ListStakePoolsRequest) returns (ListStakePoolsReply);

	rpc ListStakePoolsByEpoch (ListStakePoolsByEpochRequest) returns (ListStakePoolsReply);

	rpc GetStakePool (GetStakePoolRequest) returns (GetStakePoolReply);
}

message ListStakePoolsRequest {
	uint32 Offset = 1;
	uint32 Limit = 2;
}

message ListStakePoolsByEpochRequest {
	uint32 EpochNumber = 1;
	uint32 Offset = 2;
	uint32 Limit = 3;
}

message ListStakePoolsReply {
	uint64 Total = 1;
	uint64 From = 2;
	repeated StakePool StakePools = 3;
}

message GetStakePoolRequest {
	string PoolAddress = 1;
}

message GetStakePoolReply {
	StakePool StakePool = 1;
}

///Transactions
service Transactions {
	rpc GetTransactionDetails (GetTransactionDetailsRequest) returns (GetTransactionDetailsResponse);
}

message GetTransactionDetailsRequest {
	string TransactionHashId = 1;
}

message GetTransactionDetailsResponse {
	Transaction Transaction = 1;
}

//Base Types

message Int128 {
	bytes Value = 1;
}

message Epoch {
   uint32 Number = 1;
   uint32 TransactionCount = 2;
   uint32 BlockCount = 3;
   uint64 Fees = 4;
   Int128 OutSum = 5;
   google.protobuf.Timestamp StartTime = 6;
   google.protobuf.Timestamp EndTime = 7;
}

message EpochStatistics {
   uint32 Number = 1;
   uint64 TotalStakePools = 2;
   uint64 TotalDelegations = 3;
   uint64 CirculatingSupply = 4;
   uint64 DelegatedSupply = 5;
   uint64 Rewards = 6;
   uint64 OrphanedRewards = 7;
   bool RewardsCalculated = 8;
}

message Block {
	string Hash = 1;
	uint32 BlockNumber = 2;
	uint32 EpochNumber = 3;
	uint32 SlotNumber = 4;
	uint32 EpochSlotNumber = 5;
	int64 PreviousID = 6;
	int64 SlotLeader = 7;
	uint32 Size = 8;
	google.protobuf.Timestamp Timestamp = 9;
	uint64 TransactionCount = 10;
}

message BlockDetail {
	Block Block = 1;
	uint64 TotalFees = 2;
	Int128 TotalOutSum = 3;
}

message StakePool {
	string PoolAddress = 1;
	uint64 Pledge = 2;
	uint32 ActiveSinceEpoch = 3;
	float Margin = 4;
	uint64 FixedCost = 5;
	string MetadataUrl = 6;
	uint64 Delegation = 7;
	uint32 RetiringEpoch = 8;
}

message Transaction {	
	uint64 TransactionId = 1;
	string TransactionHash = 2;
	uint32 EpochNumber = 3;
	uint32 SlotNumber = 4;
	uint32 EpochSlotNumber = 5;
	uint32 BlockNumber = 6;
	uint64 TransactionCount = 7;
	google.protobuf.Timestamp Timestamp = 8;
	uint32 BlockSize = 9;
	uint64 OutSum = 10;
	uint64 Fees = 11;
	uint64 Deposit = 12;
	uint32 TransactionSize = 13;
	uint64 InvalidBeforeBlock = 14;
	uint64 InvalidAfterBlock = 15;
	repeated TransactionMetadata Metadata = 16;
	repeated TransactionOutput Output = 17;
	uint64 TransactionInId = 18;
}

message TransactionMetadata {
	uint64 Key = 1;
	string Json = 2;
}

message TransactionOutput {
	string Address = 1;
	uint64 Amount = 2;
}